services:
  # Web service
  - type: web
    name: bingo-api
    env: python
    buildCommand: ./render_build.sh
    startCommand: python manage.py migrations && gunicorn -k uvicorn.workers.UvicornWorker core.asgi:application 
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: core.settings
      - key: ENVIRONMENT
        value: production
      - key: RENDER
        value: true
      - key: BYPASS_EMAIL_VERIFICATION
        value: False
      - key: SECRET_KEY
        generateValue: true
      - key: DATABASE_URL
        fromDatabase:
          name: bingo-db
          property: connectionString
      - key: DB_SSL_MODE
        value: require
      - key: EMAIL_BACKEND
        value: django.core.mail.backends.smtp.EmailBackend
      - key: EMAIL_HOST
        sync: false # Set this in the Render dashboard
      - key: EMAIL_PORT
        value: 587
      - key: EMAIL_USE_TLS
        value: True
      - key: EMAIL_HOST_USER
        sync: false # Set this in the Render dashboard
      - key: EMAIL_HOST_PASSWORD
        sync: false # Set this in the Render dashboard
      - key: DEFAULT_FROM_EMAIL
        sync: false # Set this in the Render dashboard
      - key: ALLOWED_HOST
        sync: false # Set this in the Render dashboard
      - key: FRONTEND_URL
        sync: false # Set this in the Render dashboard
      - key: CORS_ALLOW_ALL_ORIGINS
        value: true
      - key: PYTHON_VERSION
        value: 3.12.3
      - key: DEBUG_ENDPOINT
        value: true
      - key: DEBUG
        value: true  # Temporarily enable Django DEBUG for more detailed error messages
      - key: REDIS_URL
        fromService:
          type: redis
          name: bingo-redis
          property: connectionString
    headers:
      - path: /*
        name: Access-Control-Allow-Origin
        value: "https://bingo-frontend-three.vercel.app"
      - path: /*
        name: Access-Control-Allow-Methods
        value: "GET,POST,PUT,DELETE,OPTIONS"
      - path: /*
        name: Access-Control-Allow-Headers
        value: "Origin, X-Requested-With, Content-Type, Accept, Authorization"

  # Redis service for WebSockets and caching
  - type: redis
    name: bingo-redis
    ipAllowList: [] # Only allow internal connections
    plan: free

  # Database service
  - type: postgresql
    name: bingo-db
    plan: free # You can upgrade this as needed
    ipAllowList: [] # Only allow internal connections

databases:
  - name: bingo-db
    databaseName: bingo_db_ea2f
    user: bingo_db_ea2f_user
